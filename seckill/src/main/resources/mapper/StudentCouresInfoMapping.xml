<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.geek.ms.mapper.StudentCourseInfoMapper">

	<insert id="addAllStudentCoures" parameterType="java.util.List">
		insert into student_course_info(user_id,course_info_id,time,years_id)
		values
		<foreach collection="list" item="item" index="index" separator=",">
            (${item.userId}, ${item.couresInfoId}, #{item.timestamp}, ${item.yearsId})
        </foreach>
	</insert>
	
	<select id="loadAllCourseId" resultType="java.lang.Integer">
		SELECT id FROM course where ismust = 0
	</select>
	
	<select id="loadCourse" resultType="com.geek.ms.pojo.vo.CourseModel">
		SELECT
			ci.id,
			c.NAME,
			ui.user_id,
			ui.realName,
			cg.name college ,
			sci.course_info_id ciid 
		FROM
			course_info ci
			LEFT JOIN course c ON ci.course_id = c.id
			LEFT JOIN user_info ui ON ci.user_id = ui.user_id
			LEFT JOIN ( SELECT course_info_id FROM student_course_info WHERE user_id = #{id} ) sci ON ci.id = sci.course_info_id 
			left join college cg on ui.college_id = cg.id
		WHERE
			c.ismust =0
			order by ci.id
			LIMIT #{start},
			#{length}
	</select>
	
	<select id="loadUpdateCourse" resultType="com.geek.ms.pojo.vo.CourseModel">
		SELECT
			ci.id,
			c.NAME,
			ui.user_id,
			ui.realName,
			cg.name college ,
			sci.course_info_id ciid 
		FROM
			course_info ci
			LEFT JOIN course c ON ci.course_id = c.id
			LEFT JOIN user_info ui ON ci.user_id = ui.user_id
			LEFT JOIN ( SELECT course_info_id FROM student_course_info) sci ON ci.id = sci.course_info_id 
			left join college cg on ui.college_id = cg.id
		WHERE
			c.ismust =0
			order by ci.id
	</select>
	
	<select id="getCourseCount" resultType="java.lang.Integer">
		SELECT
			count(c.id) count
		FROM
			course c
		WHERE
			c.ismust=0	
	</select>
	
	<resultMap type="com.geek.ms.pojo.vo.StudentCourseInfo" id="sciMap">
		<result column="couresInfoId" property="couresInfoId" jdbcType="INTEGER"/>
		<collection property="userInfo" ofType="com.geek.ms.pojo.vo.UserInfo">
			<result column="userId" property="userId" />
			<result column="number" property="number" />
			<result column="realName" property="realName" />
			<result column="college" property="college" />
		</collection>
	</resultMap>
	
	<select id="queryAllSciByTime" resultMap="sciMap">
		SELECT
			sci.course_info_id couresInfoId,
			ui.user_id userId,
			ui.number,
			ui.realName,
			cg.name college 
		FROM
			student_course_info sci
			LEFT JOIN user_info ui ON sci.user_id = ui.user_id
			LEFT JOIN course_info ci ON sci.course_info_id = ci.id 
			left join college cg on ui.college_id = cg.id
		WHERE
			unix_timestamp( time ) BETWEEN unix_timestamp( #{start} ) 
			AND unix_timestamp( NOW( ) ) 
			AND ci.user_id = #{id}
			
	</select>	
	
	<select id="isOpen" resultType="java.lang.Integer">
		select open from resources where url='/select/seckill'
	</select>
	
	<update id="openOrClose">
		update resources set open=#{open} where url='/select/seckill'
	</update>
	
	<delete id="dropCourseById">
		delete from student_course_info where user_id = #{userId} and course_info_id = #{ciid}
	</delete>
	
	<delete id="deleteCourse">
		delete from course where id in (select course_id from course_info where id = #{id})
	</delete>
	
	<update id="updateCourse">
		UPDATE course SET name = #{name} WHERE id in (select course_id from course_info where id = #{id})
	</update>
	
	<select id="isTeacher" resultType="java.lang.Integer">
		select count(id) from user_role where user_id in (select user_id from user_info where realName = #{teacherName}) and role_id = 2
	</select>
	
	<update id="updateTeahcer">
		update course_info set user_id = (select user_id from user_info where realName = #{name}) where id = #{id}
	</update>
	
	<insert id="addCourse0" parameterType="com.geek.ms.pojo.po.Course">
		insert into course (name, ismust) values (#{name}, #{ismust})
	</insert>
	
	<insert id="addCourse" parameterType="com.geek.ms.pojo.po.Course">
		insert into course (name, ismust, years_id, profession_id) values (#{name}, #{ismust}, #{yearsId}, #{professionId})
	</insert>
	
	<insert id="addCourseInfo" parameterType="java.lang.String">
		insert into course_info (course_id, user_id) values ((select id from course where name = #{courseName}), (select user_id from user_info where realName = #{teacherName}))
	</insert>
	
	<select id="selectProfession" resultType="com.geek.ms.pojo.po.Profession">
		select id, name from profession
	</select>

</mapper>